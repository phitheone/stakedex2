{"version":3,"file":"static/js/465.791cc2ba.chunk.js","mappings":"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","sources":["../node_modules/@uniswap/widgets/node_modules/ajv/lib/ajv.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/code.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/scope.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/errors.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/names.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/ref_error.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/resolve.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/rules.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/util.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/applicability.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/boolSchema.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/dataType.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/defaults.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/keyword.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/subschema.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/core.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/equal.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/ucs2length.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/uri.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/validation_error.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/contains.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/if.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/items.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/not.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/properties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/code.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/id.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/ref.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/discriminator/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/discriminator/types.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/draft7.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/format/format.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/format/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/metadata.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/const.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/enum.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/pattern.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/required.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../node_modules/@uniswap/widgets/node_modules/json-schema-traverse/index.js","../node_modules/fast-deep-equal/index.js","../node_modules/uri-js/src/util.ts","../node_modules/uri-js/src/regexps-uri.ts","../node_modules/uri-js/src/regexps-iri.ts","../node_modules/uri-js/node_modules/punycode/punycode.es6.js","../node_modules/uri-js/src/uri.ts","../node_modules/uri-js/src/schemes/http.ts","../node_modules/uri-js/src/schemes/https.ts","../node_modules/uri-js/src/schemes/ws.ts","../node_modules/uri-js/src/schemes/wss.ts","../node_modules/uri-js/src/schemes/mailto.ts","../node_modules/uri-js/src/schemes/urn.ts","../node_modules/uri-js/src/schemes/urn-uuid.ts","../node_modules/uri-js/src/index.ts"],"sourcesContent":["import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n"],"names":["core_1","require","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","Ajv","default","_addVocabularies","super","forEach","v","this","addVocabulary","opts","discriminator","addKeyword","_addDefaultMetaSchema","meta","metaSchema","$data","$dataMetaSchema","addMetaSchema","refs","defaultMeta","getSchema","undefined","module","exports","Object","defineProperty","value","validate_1","enumerable","get","KeywordCxt","codegen_1","_","str","stringify","nil","Name","CodeGen","validation_error_1","ref_error_1","_CodeOrName","constructor","s","IDENTIFIER","test","Error","toString","emptyStr","names","_Code","code","_items","length","item","_a","_str","reduce","c","_names","strs","i","_len","arguments","args","Array","_key","addCodeArg","push","plus","expr","safeStringify","_len2","_key2","res","mergeExprItems","splice","optimize","arg","x","isArray","join","a","b","slice","JSON","replace","c1","c2","key","rx","code_1","scope_1","code_2","strConcat","getProperty","regexpCode","scope_2","Scope","ValueScope","ValueScopeName","varKinds","GT","GTE","LT","LTE","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","name","rhs","render","_ref","es5","_n","var","constants","optimizeExpr","Assign","lhs","sideEffects","_ref2","addExprNames","AssignOp","op","_ref3","Label","label","_ref4","Break","_ref5","Throw","error","_ref6","AnyCode","_ref7","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","else","cond","e","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","catch","finally","_b","Catch","Finally","replaceName","some","items","par","extScope","_values","_blockStarts","lines","_extScope","_scope","parent","_nodes","_root","prefix","scopeName","scopeValue","prefixOrName","Set","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","const","_constant","let","assign","operators","object","keyValues","if","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","for","forRange","forOf","arr","forIn","obj","ownProperties","break","return","try","tryBody","catchCode","finallyCode","_currNode","throw","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","orCode","y","_len3","_key3","ValueError","UsedValueState","prefixes","_prefixes","_parent","_newName","_nameGroup","index","has","nameStr","setValue","property","itemIndex","scopePath","line","scope","ref","valueKey","vs","_name","Map","set","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","def","Completed","util_1","names_1","addError","gen","errObj","err","vErrors","errors","returnErrors","it","errs","validateName","schemaEnv","$async","ValidationError","message","keyword","schemaType","cxt","keywordError","errorPaths","overrideAllErrors","compositeRule","allErrors","errorObjectCode","errsCount","schemaValue","data","instancePath","errorPath","errSchemaPath","verbose","E","schemaPath","params","propertyName","schema","parentSchema","createErrors","errorInstancePath","errorSchemaPath","_ref8","topSchemaRef","messages","extraErrorProps","errorObject","instPath","getErrorPath","Type","Str","schPath","resolve_1","SchemaEnv","env","dynamicAnchors","schemaId","root","baseId","normalizeId","localRefs","compileSchema","sch","_sch","getCompilingSchema","call","rootId","getFullPath","uriResolver","_ValidationError","schemaCxt","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","source","jtd","self","sourceCode","_compilations","validateFunctionCode","validateCode","process","validate","Function","makeValidate","scopeValues","unevaluated","props","evaluated","dynamicProps","dynamicItems","logger","delete","inlineOrCompile","inlineRef","inlineRefs","schEnv","s2","s1","resolve","schemas","resolveSchema","p","parse","refPath","_getFullPath","keys","getJsonPointer","id","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","fragment","part","split","partSchema","unescapeFragment","$ref","schemaHasRulesButRef","RULES","valCxt","rootData","json","jsonPos","jsonLen","jsonPart","MissingRefError","resolver","msg","missingRef","missingSchema","equal","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","eachItem","serialize","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","jsonTypes","groups","number","type","rules","string","array","types","integer","boolean","null","post","all","keywords","checkUnknownRules","strictSchema","checkStrictMode","schemaHasRules","escapeJsonPointer","unescapeJsonPointer","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","evaluatedPropsToName","ps","setEvaluated","hash","decodeURIComponent","encodeURIComponent","xs","f","Math","max","snippets","mode","warn","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","shouldUseGroup","group","rule","shouldUseRule","definition","implements","kwd","errors_1","boolError","falseSchemaError","schemaCode","reportError","valid","rules_1","applicability_1","DataType","getJSONTypes","ts","every","isJSONType","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","coerceToTypes","checkTypes","schemaHasRulesForType","wrongType","checkDataTypes","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","reportTypeError","assignParentData","coerceData","checkDataType","strictNums","correct","Correct","numCond","_cond","and","toHash","notObj","typeError","schemaRefOrVal","getTypeErrorContext","assignDefault","prop","defaultValue","childData","useDefaults","ty","properties","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","dynamicRef","destructureValCxtES5","destructureValCxt","subschemaCode","isSchemaObj","checkKeywords","schemaCxtHasRules","$comment","commentKeyword","updateContext","checkAsyncSchema","typeAndKeywords","subSchemaObjCode","boolOrEmptySchema","ignoreKeywordsWithRef","checkRefsAndKeywords","schemaKeywords","getSchemaTypes","coerceAndCheckDataType","rootName","typeErrors","groupKeywords","iterateKeywords","strictTypes","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","checkKeywordTypes","checkStrictTypes","keywordCode","assignDefaults","schTs","kwdT","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","topBoolOrEmptySchema","validateKeywordUsage","getData","validSchemaType","allowUndefined","trackErrors","result","successAction","failAction","failResult","pass","fail","fail$data","or","invalid$data","append","errorParams","setParams","_error","reportExtraError","$dataError","keyword$DataError","reset","resetErrorsCount","ok","block$data","codeBlock","$dataValid","check$data","validateSchema","st","wrong$DataType","validateSchemaRef","invalid$DataSchema","subschema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","mergeEvaluated","mergeValidEvaluated","ruleType","funcKeywordCode","macroKeywordCode","compile","JSON_POINTER","RELATIVE_JSON_POINTER","jsonPointer","matches","exec","up","errorMsg","segments","segment","pointerType","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","ruleErrs","validateAsync","validateErrs","validateSync","extendErrors","addErrs","deps","dependencies","prototype","hasOwnProperty","errorsText","schemaProp","escapeFragment","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","compile_1","codegen_2","$dataRefSchema","uri_1","defaultRegExp","flags","RegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","format","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","requiredOptions","o","strict","_optz","regExp","_c","_d","_f","_e","_h","_g","_k","_j","strictTuples","_m","_l","strictRequired","_p","_o","loopRequired","_q","loopEnum","_r","_s","_t","_u","_v","addUsedSchema","_w","_x","validateFormats","_y","unicodeRegExp","_z","int32range","_0","formats","_loading","_cache","noLogs","console","log","getLogger","formatOpt","getRules","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","_dataRefSchema","$id","schemaKeyRef","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","checkLoaded","loadMissingSchema","_loadSchema","addSchema","_validateSchema","_checkUnique","throwOrLogError","keyRef","getSchEnv","removeSchema","_removeAllSchemas","clear","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","k","getKeyword","removeKeyword","findIndex","addFormat","separator","dataVar","map","text","keywordsJsonPointers","seg","schemaOrData","regex","getSchemaRefs","startsWith","_compileMetaSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","KEYWORD_NAME","ruleGroup","find","before","addBeforeRule","_rule","$dataRef","anyOf","ucs2length","pos","charCodeAt","uri","ajv","validation","validateAdditionalItems","alwaysValidSchema","validateItems","additionalProperty","removeAdditional","allSchemaProperties","patProps","patternProperties","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isOwnProperty","usePattern","isAdditional","schCxt","validateUnion","min","minContains","maxContains","next","validateItemsWithCount","schValid","checkLimits","_valid","depsCount","property_ies","missingProperty","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","missing","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","ifClause","then","hasThen","hasSchema","hasElse","validateIf","validateClause","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","dependencies_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","applicator","validateTuple","validateArray","extraItems","schArr","l","fullTuple","minItems","maxItems","checkStrictTuple","prefixItems","passing","util_2","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalProperties","allProps","hasDefault","applyPropertySchema","hasPropFunc","noPropertyInData","schemaMap","context","dataAndSchema","newRegExp","pattern","u","useFunc","validArr","notValid","id_1","ref_1","core","callRef","callRootRef","schOrEnv","resolveRef","getValidate","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","types_1","discrError","tagName","DiscrError","Tag","tag","oneOf","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary","fmts","fDef","fType","callFormat","validData","invalidFmt","validate$DataFormat","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","fmt","getFormat","validCondition","validateFormat","equal_1","useLoop","eql","getEql","vSchema","equalCode","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","comp","ucs2length_1","ops","KWDs","maximum","okStr","minimum","exclusiveMaximum","exclusiveMinimum","prec","multipleOfPrecision","invalid","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","j","itemTypes","loopN","indices","loopN2","outer","cb","_traverse","pre","rootSchema","parentKeyword","keyIndex","arrayKeywords","propsKeywords","skipKeywords","additionalItems","contains","propertyNames","allOf","$defs","multipleOf","maxLength","minLength","maxProperties","minProperties","valueOf","merge","sets","xl","subexp","typeOf","shift","toLowerCase","toUpperCase","toArray","setInterval","target","buildExps","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","QUERY$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_PROTOCOL","IRI_PROTOCOL","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","String","fromCharCode","error$1","RangeError","fn","mapDomain","parts","ucs2decode","output","counter","extra","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","decode","input","inputLength","bias","basic","lastIndexOf","oldi","w","baseMinusT","out","fromCodePoint","apply","encode","_step","Symbol","iterator","_iteratorNormalCompletion","_iterator","done","_currentValue2","basicLength","handledCPCount","m","_step2","_iteratorNormalCompletion2","_iterator2","currentValue","handledCPCountPlusOne","_step3","_iteratorNormalCompletion3","_iterator3","_currentValue","q","qMinusT","toUnicode","toASCII","punycode","toConsumableArray","SCHEMES","pctEncChar","chr","pctDecChars","newStr","il","parseInt","substr","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","_matches2","zone","reverse","last","_address$toLowerCase$2","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","longestZeroFields","acc","field","lastLongest","sort","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","iri","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","authority","charAt","absolutePath","resolveComponents","relative","tolerant","baseURI","relativeURI","schemelessOptions","normalize","uriA","uriB","escapeComponent","ESCAPE","unescapeComponent","handler","secure","handler$1","isSecure","wsComponents","handler$2","resourceName","_wsComponents$resourc2","handler$3","O","ATEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","handler$4","mailtoComponents","unknownHeaders","headers","hfields","hfield","toAddrs","_xl","subject","_x2","_xl2","addr","toAddr","atIdx","localPart","domain","URN_PARSE","handler$5","urnComponents","nid","nss","urnScheme","uriComponents","UUID","handler$6","uuidComponents","uuid"],"sourceRoot":""}